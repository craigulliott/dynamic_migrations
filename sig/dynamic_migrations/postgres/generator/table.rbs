# TypeProf 0.21.7

# Classes
module DynamicMigrations
  module Postgres
    class Generator
      module Table
        def create_table: (Postgres::Server::Database::Schema::Table table, ?String? code_comment) -> Array[Fragment]
        def drop_table: (Postgres::Server::Database::Schema::Table table, ?String? code_comment) -> Fragment
        def set_table_comment: (Postgres::Server::Database::Schema::Table table, ?String? code_comment) -> Fragment
        def remove_table_comment: (Postgres::Server::Database::Schema::Table table, ?String? code_comment) -> Fragment

        # these come from the generator object (which this module is included into)
        def add_fragment: (migration_method: Symbol, object: untyped, migration: String, ?schema: Server::Database::Schema?, ?table: Server::Database::Schema::Table?, ?code_comment: String?, ?dependent_table: Server::Database::Schema::Table?, ?dependent_function: Server::Database::Schema::Function?, ?dependent_enum: Server::Database::Schema::Enum?) -> Fragment
        def add_column: (Postgres::Server::Database::Schema::Table::Column column, ?String? code_comment) -> Fragment
        def set_column_comment: (Postgres::Server::Database::Schema::Table::Column column, ?String? code_comment) -> Fragment
        def set_primary_key_comment: (Postgres::Server::Database::Schema::Table::PrimaryKey primary_key, ?String? code_comment) -> Fragment

        def indent: (String migration, ?Integer levels) -> String

        private
        def table_columns: (Array[Postgres::Server::Database::Schema::Table::Column] columns) -> String
        def table_options: (Postgres::Server::Database::Schema::Table table) -> String

        class NoTableCommentError < StandardError
        end

        class NoTableColumnCommentError < StandardError
        end
      end
    end
  end
end