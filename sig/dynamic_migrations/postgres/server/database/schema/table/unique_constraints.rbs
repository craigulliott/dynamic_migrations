module DynamicMigrations
  module Postgres
    class Server
      class Database
        class Schema
          class Table
            module UniqueConstraints
              @unique_constraints: Hash[Symbol, UniqueConstraint]

              def unique_constraint: (Symbol name) -> UniqueConstraint
              def has_unique_constraint?: (Symbol name) -> bool
              def unique_constraints: -> Array[UniqueConstraint]
              def unique_constraints_hash: -> Hash[Symbol, UniqueConstraint]
              def add_unique_constraint: (Symbol name, Array[Symbol] column_names, **untyped) -> UniqueConstraint

              # these come from the table object (which this module is included into)
              def source: -> database_or_configuration
              def column: (Symbol column_name) -> Column

              class UniqueConstraintDoesNotExistError < StandardError
              end

              class UniqueConstraintAlreadyExistsError < StandardError
              end
            end
          end
        end
      end
    end
  end
end
