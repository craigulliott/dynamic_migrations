module DynamicMigrations
  module Postgres
    class Server
      class Database
        class Schema
          class Table
            class Validation < Source
              @columns: Hash[Symbol, Column]

              attr_reader table: Table
              attr_reader name: Symbol
              attr_reader check_clause: String
              attr_reader deferrable: bool
              attr_reader initially_deferred: bool
              attr_reader description: String | nil

              def initialize: (database_or_configuration source, Table table, Array[Column] columns, Symbol name, String check_clause, ?deferrable: bool, ?initially_deferred: bool, ?description: String | nil) -> void
              def columns: -> Array[Column]
              def column_names: -> Array[Symbol]
              def has_description?: -> bool

              private
              def add_column: (Column column) -> void

              class ExpectedTableError < StandardError
              end

              class ExpectedArrayOfColumnsError < StandardError
              end

              class DuplicateColumnError < StandardError
              end

              class ModuleIncludedIntoUnexpectedTargetError < StandardError
              end
            end
          end
        end
      end
    end
  end
end
