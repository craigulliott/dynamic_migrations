module DynamicMigrations
  module Postgres
    class Server
      class Database
        class Schema
          class Table
            class PrimaryKey < Source
              type index_types = :btree | :gin
              INDEX_TYPES: [:btree, :gin]
              @columns: Hash[Symbol, Column]

              attr_reader table: Table
              attr_reader primary_key_name: Symbol
              attr_reader index_type: index_types
              def initialize: (database_or_configuration source, Table table, Array[Column] columns, Symbol primary_key_name, ?index_type: index_types) -> void
              def columns: -> Array[Column]

              private
              def add_column: (Column column) -> void

              class ExpectedTableError < StandardError
              end

              class ExpectedArrayOfColumnsError < StandardError
              end

              class UnexpectedIndexTypeError < StandardError
              end

              class DuplicateColumnError < StandardError
              end
            end
          end
        end
      end
    end
  end
end
