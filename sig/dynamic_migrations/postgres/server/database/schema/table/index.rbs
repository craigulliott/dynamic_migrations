module DynamicMigrations
  module Postgres
    class Server
      class Database
        class Schema
          class Table
            class Index < Source
              INDEX_TYPES: [:btree, :hash, :gist, :gin, :bring, :spgist]
              ORDERS: [:asc, :desc]
              NULL_POSITIONS: [:first, :last]

              type index_types = :btree | :hash | :gist | :gin | :bring | :spgist
              type index_orders = :asc | :desc
              type index_null_positions = :first | :last

              @columns: Hash[untyped, untyped]
              @include_columns: Hash[untyped, untyped]

              attr_reader table: Table
              attr_reader name: Symbol
              attr_reader unique: bool
              attr_reader where: String?
              attr_reader type: index_types
              attr_reader order: index_orders
              attr_reader nulls_position: index_null_positions
              attr_reader description: String?

              def initialize: (database_or_configuration source, Table table, Array[Column] columns, Symbol name, ?unique: bool, ?where: String?, ?type: index_types, ?include_columns: Array[Column], ?order: index_orders, ?nulls_position: index_null_positions, ?description: String?) -> void
              def columns: -> Array[Column]
              def column_names: -> Array[Symbol]
              def include_columns: -> Array[Column]
              def include_column_names: -> Array[Symbol]
              def has_description?: -> bool
              def differences_descriptions: (Index other_index) -> Array[String]

              private
              def add_column: (Column column, ?is_include_column: bool) -> void

              class ExpectedTableError < StandardError
              end

              class ExpectedArrayOfColumnsError < StandardError
              end

              class UnexpectedIndexTypeError < StandardError
              end

              class UnexpectedOrderError < StandardError
              end

              class UnexpectedNullsPositionError < StandardError
              end

              class DuplicateColumnError < StandardError
              end
            end
          end
        end
      end
    end
  end
end
