# TypeProf 0.21.7

# Classes
module DynamicMigrations
  module Postgres
    class Server
      class Database
        class Schema
          class Function < Source
            @normalized_definition: String?

            attr_reader schema: Schema
            attr_reader name: Symbol
            attr_reader definition: String
            attr_reader description: String?
            attr_reader triggers: Array[Schema::Table::Trigger]
            def initialize: (database_or_configuration source, Schema schema, Symbol name, String definition, ?description: String?) -> void
            def has_description?: -> bool
            def add_trigger: (Schema::Table::Trigger trigger) -> void
            def differences_descriptions: (Function other_function) -> Array[String]
            def normalized_definition: -> String

            private
            def fetch_normalized_definition: -> String

            class ExpectedSchemaError < StandardError
            end

            class ExpectedDefinitionError < StandardError
            end

            class UnnormalizableDefinitionError < StandardError
            end
          end
        end
      end
    end
  end
end
